{"version":3,"sources":["webpack:///./src/views/Trees.vue?646e","webpack:///./src/assets/xgboost_classifier.md","webpack:///./src/assets/lightgbm_classifier.md","webpack:///./src/assets/classifier.md","webpack:///./src/assets/xgboost_regressor.md","webpack:///./src/assets/lightgbm_regressor.md","webpack:///./src/assets/regressor.md","webpack:///src/views/Trees.vue","webpack:///./src/views/Trees.vue?ecba","webpack:///../../../src/components/VDataTable/VSimpleTable.ts","webpack:///./src/views/Trees.vue?0df6","webpack:///./src/views/Trees.vue?9065","webpack:///./node_modules/core-js/modules/es.object.from-entries.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_m","attrs","scopedSlots","_u","key","fn","_l","column","_s","val","i","model","value","sample","callback","$$v","$set","expression","proxy","output","Object","keys","_e","values","map","x","ref","Math","round","classifierUsage","data","item","selected","classifierMd","regressorUsage","regressorMd","staticRenderFns","rURL","src","window","location","href","replace","name","created","inputFacts","0","columns","length","outputs","then","watch","handler","methods","mixins","props","dense","fixedHeader","height","Number","String","computed","classes","themeClasses","genWrapper","$slots","wrapper","style","h","class","component","VCol","VRow","VSelect","VSimpleTable","VSpacer","VTextField","$","iterate","createProperty","target","stat","fromEntries","iterable","obj","k","v","undefined"],"mappings":"yIAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,8BAA8B,CAACF,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,KAAK,CAACE,YAAY,iBAAiB,CAACN,EAAIO,GAAG,uCAAuCH,EAAG,IAAI,CAACJ,EAAIO,GAAG,gMAAgMP,EAAIQ,GAAG,GAAGJ,EAAG,iBAAiB,CAACE,YAAY,OAAOG,MAAM,CAAC,MAAQ,IAAIC,YAAYV,EAAIW,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,WAAW,MAAO,CAACT,EAAG,QAAQ,CAACA,EAAG,KAAKJ,EAAIc,GAAId,EAAW,SAAE,SAASe,GAAQ,OAAOX,EAAG,KAAK,CAACQ,IAAIG,EAAOT,YAAY,aAAa,CAACN,EAAIO,GAAG,IAAIP,EAAIgB,GAAGD,GAAQ,UAAS,KAAKX,EAAG,QAAQ,CAACA,EAAG,KAAKJ,EAAIc,GAAId,EAAU,QAAE,SAASiB,EAAIC,GAAG,OAAOd,EAAG,KAAK,CAACQ,IAAIM,GAAG,CAACd,EAAG,eAAe,CAACK,MAAM,CAAC,eAAe,GAAG,cAAc,GAAG,KAAO,UAAUU,MAAM,CAACC,MAAOpB,EAAIqB,OAAOH,GAAII,SAAS,SAAUC,GAAMvB,EAAIwB,KAAKxB,EAAIqB,OAAQH,EAAGK,IAAME,WAAW,gBAAgB,MAAK,OAAOC,OAAM,OAAUtB,EAAG,KAAK,CAACJ,EAAIO,GAAG,iCAAiCH,EAAG,iBAAiB,CAACE,YAAY,QAAQG,MAAM,CAAC,MAAQ,IAAIC,YAAYV,EAAIW,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,WAAW,MAAO,CAAgB,MAAdb,EAAI2B,OAAgBvB,EAAG,QAAQ,CAACA,EAAG,KAAKJ,EAAIc,GAAIc,OAAOC,KAAK7B,EAAI2B,SAAS,SAASZ,GAAQ,OAAOX,EAAG,KAAK,CAACQ,IAAIG,EAAOT,YAAY,aAAa,CAACN,EAAIO,GAAG,IAAIP,EAAIgB,GAAGD,GAAQ,UAAS,KAAKf,EAAI8B,KAAoB,MAAd9B,EAAI2B,OAAgBvB,EAAG,QAAQ,CAACA,EAAG,KAAKJ,EAAIc,GAAIc,OAAOG,OAAO/B,EAAI2B,QAAQK,KAAI,SAAUC,EAAGf,GAAK,MAAO,CAACe,EAAGf,OAAQ,SAASgB,GACpgD,IAAIjB,EAAMiB,EAAI,GACVhB,EAAIgB,EAAI,GACZ,OAAO9B,EAAG,KAAK,CAACQ,IAAIM,GAAG,CAAClB,EAAIO,GAAG,IAAIP,EAAIgB,GAAGmB,KAAKC,MAAY,IAANnB,GAAc,KAAM,UAAS,KAAKjB,EAAI8B,OAAOJ,OAAM,OAAUtB,EAAG,QAAQ,CAACE,YAAY,sBAAsB,CAACF,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACJ,EAAIO,GAAG,yBAAyBH,EAAG,YAAYA,EAAG,QAAQ,CAACE,YAAY,OAAOG,MAAM,CAAC,GAAK,MAAM,CAACL,EAAG,WAAW,CAACK,MAAM,CAAC,OAAS,MAAM,MAAQmB,OAAOC,KAAK7B,EAAIqC,iBAAiB,MAAQ,aAAa3B,YAAYV,EAAIW,GAAG,CAAC,CAACC,IAAI,OAAOC,GAAG,SAASyB,GAAM,MAAO,CAACtC,EAAIO,GAAG,IAAIP,EAAIgB,GAAGsB,EAAKC,MAAM,QAAQ,CAAC3B,IAAI,YAAYC,GAAG,SAASyB,GAAM,MAAO,CAACtC,EAAIO,GAAG,IAAIP,EAAIgB,GAAGsB,EAAKC,MAAM,UAAUpB,MAAM,CAACC,MAAOpB,EAAY,SAAEsB,SAAS,SAAUC,GAAMvB,EAAIwC,SAASjB,GAAKE,WAAW,eAAe,IAAI,GAAGrB,EAAG,kBAAkB,CAACK,MAAM,CAAC,QAAUT,EAAIqC,gBAAgBrC,EAAIwC,UAAU,WAAWpC,EAAG,kBAAkB,CAACE,YAAY,OAAOG,MAAM,CAAC,QAAUT,EAAIyC,gBAAgBrC,EAAG,QAAQ,CAACE,YAAY,sBAAsB,CAACF,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACJ,EAAIO,GAAG,wBAAwBH,EAAG,YAAYA,EAAG,QAAQ,CAACE,YAAY,OAAOG,MAAM,CAAC,GAAK,MAAM,CAACL,EAAG,WAAW,CAACK,MAAM,CAAC,OAAS,MAAM,MAAQmB,OAAOC,KAAK7B,EAAI0C,gBAAgB,MAAQ,aAAahC,YAAYV,EAAIW,GAAG,CAAC,CAACC,IAAI,OAAOC,GAAG,SAASyB,GAAM,MAAO,CAACtC,EAAIO,GAAG,IAAIP,EAAIgB,GAAGsB,EAAKC,MAAM,QAAQ,CAAC3B,IAAI,YAAYC,GAAG,SAASyB,GAAM,MAAO,CAACtC,EAAIO,GAAG,IAAIP,EAAIgB,GAAGsB,EAAKC,MAAM,UAAUpB,MAAM,CAACC,MAAOpB,EAAY,SAAEsB,SAAS,SAAUC,GAAMvB,EAAIwC,SAASjB,GAAKE,WAAW,eAAe,IAAI,GAAGrB,EAAG,kBAAkB,CAACK,MAAM,CAAC,QAAUT,EAAI0C,eAAe1C,EAAIwC,UAAU,WAAWpC,EAAG,kBAAkB,CAACE,YAAY,OAAOG,MAAM,CAAC,QAAUT,EAAI2C,eAAe3C,EAAIQ,GAAG,IAAI,MAC3/CoC,EAAkB,CAAC,WAAa,IAAI5C,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,KAAK,CAACJ,EAAIO,GAAG,qBAAqBH,EAAG,IAAI,CAACK,MAAM,CAAC,KAAO,uDAAuD,CAACT,EAAIO,GAAG,kBAAkBP,EAAIO,GAAG,UAAU,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACJ,EAAIO,GAAG,kBAAkBH,EAAG,MAAM,CAACJ,EAAIO,GAAG,2J,0VCJ7X,4qBCAA,i0BCAA,6UCAA,2ECAA,6hCCAA,K,UCqIf,SAASsC,EAAKC,GAEZ,OAAOC,OAAOC,SAASC,KAAKC,QAAQ,MAAO,IAAM,IAAMJ,EAGzD,OACEK,KAAM,QACNb,KAAM,WAAR,OACA,SACA,oBACA,mBACA,oBACA,oBAEA,+CACA,QAEM,IACN,IACA,IACA,IACA,iDACA,WACA,YACA,oBACA,iBACA,UACA,QAEA,SACA,SAGA,eACA,gBACA,UACA,QAEA,SACA,SAGA,gBAEEc,QAvCF,WAuCA,WACInD,KAAKkB,MAAQ,EAAjB,sBACMkC,WAAY,CACVC,EAAG,CAAC,UAAW,CAAC,IAAKrD,KAAKsD,QAAQC,UAEpCC,QAAS,CAAC,mBAEZxD,KAAKkB,MAAMuC,MAAK,SAApB,GACM,EAAN,eAGEC,MAAO,CACLtC,OAAQ,CACNuC,QAAS,WAAf,kKACA,WADA,OACA,EADA,OAGA,gBAHA,qGAAe,KAObC,QAAS,CACP,QADJ,SACA,0KACA,yCACA,EACA,mBAHA,SAKA,eALA,OAKA,EALA,OAOA,4BACA,uEARA,gDCtM0Y,I,yJCO3X,SAAAC,EAAA,qBAAyB,CACtCX,KADsC,iBAGtCY,MAAO,CACLC,MADK,QAELC,YAFK,QAGLC,OAAQ,CAACC,OAAQC,SAGnBC,SAAU,CACRC,QADQ,WAEN,uBACE,sBAAuBrE,KADlB,MAEL,+BAAgCA,KAAF,SAAkBA,KAF3C,YAGL,6BAA8BA,KAHzB,aAIFA,KAAKsE,gBAKdV,QAAS,CACPW,WADO,WAEL,OAAOvE,KAAKwE,OAAOC,SAAWzE,KAAKE,eAAe,MAAO,CACvDG,YADuD,wBAEvDqE,MAAO,CACLT,OAAQ,eAAcjE,KAAD,UAEtB,CACDA,KAAKE,eAAe,QAASF,KAAKwE,OANpC,aAWJ1E,OAjCsC,SAiChC,GACJ,OAAO6E,EAAE,MAAO,CACdtE,YADc,eAEduE,MAAO5E,KAAKqE,SACX,CACDrE,KAAKwE,OADJ,IAEDxE,KAFC,aAGDA,KAAKwE,OANP,Y,wBCjCAK,EAAY,eACd,EACA/E,EACA6C,GACA,EACA,KACA,KACA,MAIa,aAAAkC,EAAiB,QAUhC,IAAkBA,EAAW,CAACC,OAAA,KAAKC,OAAA,KAAKC,UAAA,KAAQC,aAAA,EAAaC,UAAA,KAAQC,aAAA,Q,2DC7BrE,yBAAugB,EAAG,G,8CCA1gB,IAAIC,EAAI,EAAQ,QACZC,EAAU,EAAQ,QAClBC,EAAiB,EAAQ,QAI7BF,EAAE,CAAEG,OAAQ,SAAUC,MAAM,GAAQ,CAClCC,YAAa,SAAqBC,GAChC,IAAIC,EAAM,GAIV,OAHAN,EAAQK,GAAU,SAAUE,EAAGC,GAC7BP,EAAeK,EAAKC,EAAGC,UACtBC,GAAW,GACPH","file":"js/trees.e83a2a44.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"d-flex justify-center pa-8\"},[_c('div',{staticClass:\"tree-container\"},[_c('h1',{staticClass:\"headline mb-2\"},[_vm._v(\"Running XGBoost / LightGBM models\")]),_c('p',[_vm._v(\" tractjs can now run Decision Tree Classifiers and Regressors! This demo shows how to export the models to ONNX and run them on the client-side in your browser via WASM through tractjs. \")]),_vm._m(0),_c('v-simple-table',{staticClass:\"mb-4\",attrs:{\"dense\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(){return [_c('thead',[_c('tr',_vm._l((_vm.columns),function(column){return _c('th',{key:column,staticClass:\"text-left\"},[_vm._v(\" \"+_vm._s(column)+\" \")])}),0)]),_c('tbody',[_c('tr',_vm._l((_vm.sample),function(val,i){return _c('td',{key:i},[_c('v-text-field',{attrs:{\"hide-details\":\"\",\"single-line\":\"\",\"type\":\"number\"},model:{value:(_vm.sample[i]),callback:function ($$v) {_vm.$set(_vm.sample, i, $$v)},expression:\"sample[i]\"}})],1)}),0)])]},proxy:true}])}),_c('h4',[_vm._v(\"Prediction (LightGBM tree):\")]),_c('v-simple-table',{staticClass:\"mb-16\",attrs:{\"dense\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(){return [(_vm.output != null)?_c('thead',[_c('tr',_vm._l((Object.keys(_vm.output)),function(column){return _c('th',{key:column,staticClass:\"text-left\"},[_vm._v(\" \"+_vm._s(column)+\" \")])}),0)]):_vm._e(),(_vm.output != null)?_c('tbody',[_c('tr',_vm._l((Object.values(_vm.output).map(function (x, i) { return [x, i]; })),function(ref){\nvar val = ref[0];\nvar i = ref[1];\nreturn _c('td',{key:i},[_vm._v(\" \"+_vm._s(Math.round(val * 1000) / 1000)+\" \")])}),0)]):_vm._e()]},proxy:true}])}),_c('v-row',{staticClass:\"align-center mt-12\"},[_c('v-col',[_c('h2',[_vm._v(\"Using classifiers\")])]),_c('v-spacer'),_c('v-col',{staticClass:\"pb-0\",attrs:{\"md\":\"2\"}},[_c('v-select',{attrs:{\"height\":\"3em\",\"items\":Object.keys(_vm.classifierUsage),\"label\":\"Framework\"},scopedSlots:_vm._u([{key:\"item\",fn:function(data){return [_vm._v(\" \"+_vm._s(data.item)+\" \")]}},{key:\"selection\",fn:function(data){return [_vm._v(\" \"+_vm._s(data.item)+\" \")]}}]),model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}})],1)],1),_c('markdown-it-vue',{attrs:{\"content\":_vm.classifierUsage[_vm.selected]['code']}}),_c('markdown-it-vue',{staticClass:\"mt-4\",attrs:{\"content\":_vm.classifierMd}}),_c('v-row',{staticClass:\"align-center mt-12\"},[_c('v-col',[_c('h2',[_vm._v(\"Using regressors\")])]),_c('v-spacer'),_c('v-col',{staticClass:\"pb-0\",attrs:{\"md\":\"2\"}},[_c('v-select',{attrs:{\"height\":\"3em\",\"items\":Object.keys(_vm.regressorUsage),\"label\":\"Framework\"},scopedSlots:_vm._u([{key:\"item\",fn:function(data){return [_vm._v(\" \"+_vm._s(data.item)+\" \")]}},{key:\"selection\",fn:function(data){return [_vm._v(\" \"+_vm._s(data.item)+\" \")]}}]),model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}})],1)],1),_c('markdown-it-vue',{attrs:{\"content\":_vm.regressorUsage[_vm.selected]['code']}}),_c('markdown-it-vue',{staticClass:\"mt-4\",attrs:{\"content\":_vm.regressorMd}}),_vm._m(1)],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',[_vm._v(\" Input (from the \"),_c('a',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Iris_flower_data_set\"}},[_vm._v(\"Iris dataset\")]),_vm._v(\"): \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" Tested with: \"),_c('pre',[_vm._v(\"  xgboost==1.3.1\\n  onnx==1.8.0\\n  onnxmltools==1.7.0\\n  scikit-learn==0.23.2\\n  lightgbm==3.1.1\\n  hummingbird-ml==0.2.1\\n  torch==1.7.0\\n      \")])])}]\n\nexport { render, staticRenderFns }","export default \"XGBoost models can be exported to ONNX via [onnxmltools](https://github.com/onnx/onnxmltools):\\n\\n```python\\nimport numpy as np\\nimport onnx\\nimport onnxmltools\\nfrom onnxmltools.convert.common import data_types\\nfrom sklearn import datasets\\nfrom xgboost.sklearn import XGBClassifier\\n\\n# load a sample dataset\\nx, y = datasets.load_iris(return_X_y=True)\\nx = x.astype(np.float32)\\n\\n# fit the model\\nmodel = XGBClassifier(n_estimators=10, use_label_encoder=False)\\nmodel.fit(x, y)\\n\\n# export to ONNX\\nonnx_model = onnxmltools.convert_xgboost(\\n    model, initial_types=[(\\\"input\\\", data_types.FloatTensorType([None, x.shape[1]]))],\\n)\\nonnx.save(onnx_model, \\\"model.onnx\\\")\\n```\\n\";","export default \"LightGBM models can be exported to ONNX via [hummingbird](https://github.com/microsoft/hummingbird):\\n\\n```python\\nimport numpy as np\\nfrom sklearn import datasets\\nfrom lightgbm.sklearn import LGBMClassifier\\nfrom hummingbird.ml import convert\\nimport onnxruntime\\nimport torch\\n\\n# load a sample dataset\\nx, y = datasets.load_iris(return_X_y=True)\\nx = x.astype(np.float32)\\n\\n# fit the model\\nmodel = LGBMClassifier(n_estimators=10)\\nmodel.fit(x, y)\\n\\npytorch_model = convert(model, \\\"pytorch\\\")\\n\\n# export to ONNX\\ntorch.onnx.export(\\n    pytorch_model.model,\\n    (torch.from_numpy(x)),\\n    \\\"model.onnx\\\",\\n    input_names=[\\\"input\\\"],\\n    output_names=[\\\"output\\\", \\\"probabilities\\\"],\\n    dynamic_axes={\\n        \\\"input\\\": {0: \\\"batch\\\"},\\n        \\\"output\\\": {0: \\\"batch\\\"},\\n        \\\"probabilities\\\": {0: \\\"batch\\\"},\\n    },\\n)\\n```\\n\";","export default \"And then loaded and run in tractjs:\\n\\n```javascript\\nlet model = await tractjs.load(\\\"model.onnx\\\", {\\n    inputFacts: {\\n        0: [\\\"float32\\\", [\\\"s\\\", 4]],\\n    },\\n    outputs: [\\\"probabilities\\\"],\\n});\\nlet input = new tractjs.Tensor(new Float32Array([5.1, 3.5, 1.4, 0.2], [1, 4]))\\nlet preds = await model.predict([input]);\\n```\";","export default \"XGBoost Regressors via `onnxmltools` are not yet supported in tractjs.\";","export default \"LightGBM models can be exported to ONNX via [hummingbird](https://github.com/microsoft/hummingbird):\\n\\n```python\\nimport torch\\nfrom hummingbird.ml import convert\\nfrom lightgbm.sklearn import LGBMRegressor\\nfrom sklearn import datasets\\n\\n# load a sample dataset\\nx, y = datasets.load_boston(return_X_y=True)\\n\\n# fit the model\\nmodel = LGBMRegressor(n_estimators=10)\\nmodel.fit(x, y)\\n\\npytorch_model = convert(model, \\\"pytorch\\\")\\n\\n# export to ONNX\\ntorch.onnx.export(\\n    pytorch_model.model,\\n    (torch.from_numpy(x)),\\n    \\\"model.onnx\\\",\\n    input_names=[\\\"input\\\"],\\n    output_names=[\\\"variable\\\"],\\n    dynamic_axes={\\\"input\\\": {0: \\\"batch\\\"}, \\\"variable\\\": {0: \\\"batch\\\"}},\\n)\\n```\\n\\n\\nAnd then loaded and run in tractjs:\\n\\n```javascript\\nlet model = await tractjs.load(\\\"model.onnx\\\", {\\n    inputFacts: {\\n        0: [\\\"float32\\\", [\\\"s\\\", 13]],\\n    },\\n});\\nlet input = new tractjs.Tensor(new Float32Array([0.00632, 18.0, 2.31, 0.0, 0.538, 6.575, 65.2, 4.09, 1.0, 296.0, 15.3, 396.9, 4.98]), [1, 13]);\\nlet preds = await model.predict([input]);\\n```\";","export default \"\";","<template>\n  <div class=\"d-flex justify-center pa-8\">\n    <div class=\"tree-container\">\n      <h1 class=\"headline mb-2\">Running XGBoost / LightGBM models</h1>\n      <p>\n        tractjs can now run Decision Tree Classifiers and Regressors! This demo\n        shows how to export the models to ONNX and run them on the client-side\n        in your browser via WASM through tractjs.\n      </p>\n      <h4>\n        Input (from the\n        <a href=\"https://en.wikipedia.org/wiki/Iris_flower_data_set\"\n          >Iris dataset</a\n        >):\n      </h4>\n      <v-simple-table class=\"mb-4\" dense>\n        <template v-slot:default>\n          <thead>\n            <tr>\n              <th v-for=\"column in columns\" :key=\"column\" class=\"text-left\">\n                {{ column }}\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td v-for=\"(val, i) in sample\" :key=\"i\">\n                <v-text-field\n                  v-model=\"sample[i]\"\n                  hide-details\n                  single-line\n                  type=\"number\"\n                >\n                </v-text-field>\n              </td>\n            </tr>\n          </tbody>\n        </template>\n      </v-simple-table>\n      <h4>Prediction (LightGBM tree):</h4>\n      <v-simple-table class=\"mb-16\" dense>\n        <template v-slot:default>\n          <thead v-if=\"output != null\">\n            <tr>\n              <th\n                v-for=\"column in Object.keys(output)\"\n                :key=\"column\"\n                class=\"text-left\"\n              >\n                {{ column }}\n              </th>\n            </tr>\n          </thead>\n          <tbody v-if=\"output != null\">\n            <tr>\n              <td\n                v-for=\"[val, i] in Object.values(output).map((x, i) => [x, i])\"\n                :key=\"i\"\n              >\n                {{ Math.round(val * 1000) / 1000 }}\n              </td>\n            </tr>\n          </tbody>\n        </template>\n      </v-simple-table>\n      <v-row class=\"align-center mt-12\">\n        <v-col>\n          <h2>Using classifiers</h2>\n        </v-col>\n        <v-spacer />\n        <v-col md=\"2\" class=\"pb-0\">\n          <v-select\n            height=\"3em\"\n            :items=\"Object.keys(classifierUsage)\"\n            label=\"Framework\"\n            v-model=\"selected\"\n          >\n            <template slot=\"item\" slot-scope=\"data\"> {{ data.item }} </template\n            ><template slot=\"selection\" slot-scope=\"data\">\n              {{ data.item }}\n            </template></v-select\n          >\n        </v-col>\n      </v-row>\n      <markdown-it-vue :content=\"classifierUsage[selected]['code']\" />\n      <markdown-it-vue class=\"mt-4\" :content=\"classifierMd\" />\n      <v-row class=\"align-center mt-12\">\n        <v-col>\n          <h2>Using regressors</h2>\n        </v-col>\n        <v-spacer />\n        <v-col md=\"2\" class=\"pb-0\">\n          <v-select\n            height=\"3em\"\n            :items=\"Object.keys(regressorUsage)\"\n            label=\"Framework\"\n            v-model=\"selected\"\n          >\n            <template slot=\"item\" slot-scope=\"data\"> {{ data.item }} </template\n            ><template slot=\"selection\" slot-scope=\"data\">\n              {{ data.item }}\n            </template></v-select\n          >\n        </v-col>\n      </v-row>\n      <markdown-it-vue :content=\"regressorUsage[selected]['code']\" />\n      <markdown-it-vue class=\"mt-4\" :content=\"regressorMd\" />\n      <p>\n        Tested with:\n        <pre>\n    xgboost==1.3.1\n    onnx==1.8.0\n    onnxmltools==1.7.0\n    scikit-learn==0.23.2\n    lightgbm==3.1.1\n    hummingbird-ml==0.2.1\n    torch==1.7.0\n        </pre>\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as tractjs from \"tractjs\";\nimport xgboostClassifierUsage from \"@/assets/xgboost_classifier.md\";\nimport lightGBMClassifierUsage from \"@/assets/lightgbm_classifier.md\";\nimport classifierMd from \"@/assets/classifier.md\";\nimport xgboostRegressorUsage from \"@/assets/xgboost_regressor.md\";\nimport lightGBMRegressorUsage from \"@/assets/lightgbm_regressor.md\";\nimport regressorMd from \"@/assets/regressor.md\";\nimport \"highlight.js/styles/github.css\";\n\nfunction rURL(src) {\n  // this makes sure it works both locally and on gh-pages\n  return window.location.href.replace(/\\/$/, \"\") + \"/\" + src;\n}\n\nexport default {\n  name: \"Trees\",\n  data: () => ({\n    columns: [\n      \"sepal length (cm)\",\n      \"sepal width (cm)\",\n      \"petal length (cm)\",\n      \"petal width (cm)\",\n    ],\n    labelNames: [\"setosa\", \"versicolor\", \"virginica\"],\n    sample: [\n      // this is just the first sample in the wine dataset\n      5.1,\n      3.5,\n      1.4,\n      0.2,\n    ].map((x) => Math.round(x * 100) / 100),\n    model: null,\n    output: null,\n    selected: \"LightGBM\",\n    classifierUsage: {\n      LightGBM: {\n        code: lightGBMClassifierUsage,\n      },\n      XGBoost: {\n        code: xgboostClassifierUsage,\n      },\n    },\n    classifierMd,\n    regressorUsage: {\n      LightGBM: {\n        code: lightGBMRegressorUsage,\n      },\n      XGBoost: {\n        code: xgboostRegressorUsage,\n      },\n    },\n    regressorMd,\n  }),\n  created() {\n    this.model = tractjs.load(rURL(\"model.onnx\"), {\n      inputFacts: {\n        0: [\"float32\", [\"s\", this.columns.length]],\n      },\n      outputs: [\"probabilities\"],\n    });\n    this.model.then((model) => {\n      this.predict(model);\n    });\n  },\n  watch: {\n    sample: {\n      handler: async function () {\n        let model = await this.model;\n\n        this.predict(model);\n      },\n    },\n  },\n  methods: {\n    async predict(model) {\n      let tensor = new tractjs.Tensor(new Float32Array(this.sample), [\n        1,\n        this.columns.length,\n      ]);\n      let preds = await model.predict([tensor]);\n      // .predict returns an array of tensors, we are interested in the data of the first output\n      this.output = Object.fromEntries(\n        Array.from(preds[0].data).map((x, i) => [this.labelNames[i], x])\n      );\n    },\n  },\n};\n</script>\n\n<style>\n.tree-container input {\n  padding: 0;\n  margin: 0;\n  font-size: 0.875em;\n}\n\n.tree-container .v-text-field {\n  padding: 0;\n}\n\n.tree-container {\n  max-width: 100%;\n  width: 50rem;\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--19-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Trees.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--19-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Trees.vue?vue&type=script&lang=js&\"","import './VSimpleTable.sass'\n\nimport { convertToUnit } from '../../util/helpers'\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\n\nexport default mixins(Themeable).extend({\n  name: 'v-simple-table',\n\n  props: {\n    dense: Boolean,\n    fixedHeader: Boolean,\n    height: [Number, String],\n  },\n\n  computed: {\n    classes (): Record<string, boolean> {\n      return {\n        'v-data-table--dense': this.dense,\n        'v-data-table--fixed-height': !!this.height && !this.fixedHeader,\n        'v-data-table--fixed-header': this.fixedHeader,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  methods: {\n    genWrapper () {\n      return this.$slots.wrapper || this.$createElement('div', {\n        staticClass: 'v-data-table__wrapper',\n        style: {\n          height: convertToUnit(this.height),\n        },\n      }, [\n        this.$createElement('table', this.$slots.default),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-data-table',\n      class: this.classes,\n    }, [\n      this.$slots.top,\n      this.genWrapper(),\n      this.$slots.bottom,\n    ])\n  },\n})\n","import { render, staticRenderFns } from \"./Trees.vue?vue&type=template&id=4d402ada&\"\nimport script from \"./Trees.vue?vue&type=script&lang=js&\"\nexport * from \"./Trees.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Trees.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSelect } from 'vuetify/lib/components/VSelect';\nimport { VSimpleTable } from 'vuetify/lib/components/VDataTable';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VCol,VRow,VSelect,VSimpleTable,VSpacer,VTextField})\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/vuetify-loader/lib/loader.js??ref--19-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Trees.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/vuetify-loader/lib/loader.js??ref--19-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Trees.vue?vue&type=style&index=0&lang=css&\"","var $ = require('../internals/export');\nvar iterate = require('../internals/iterate');\nvar createProperty = require('../internals/create-property');\n\n// `Object.fromEntries` method\n// https://github.com/tc39/proposal-object-from-entries\n$({ target: 'Object', stat: true }, {\n  fromEntries: function fromEntries(iterable) {\n    var obj = {};\n    iterate(iterable, function (k, v) {\n      createProperty(obj, k, v);\n    }, undefined, true);\n    return obj;\n  }\n});\n"],"sourceRoot":""}